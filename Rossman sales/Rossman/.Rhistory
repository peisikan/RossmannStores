true = df[true_idx, Sales]
true = df[true_idx,'Sales']
true
true = df[true_idx,Sales]
true
length(pred)
train
true = test[,Sales][order(Store, Date)]
test = df[test_idx,]
true = test[,Sales][order(Store, Date)]
true = test[order(Store, Date), 'Sales']
true
true = test[order(Store, Date), Sales]
true
test_idx = df$Date %in% ((max(df$Date) - Ndays + 1) : max(df$Date))
test = df[test_idx,]
train = df[!test_idx, ]
true = test[order(Store, Date), Sales]
true
summary(true)
test[order(Store, Date), Sales]
test[order(Store, Date), ]
pred=tapply(train$Sales, train$Store,median)
length(pred)
output = c()
pred = sapply(pred, function(x){output = c(output, rep(x,47));output})
output
pred
pred=tapply(train$Sales, train$Store,median)
pred = train[, .(Store, median(Sales)), by = Store]
pred = train[, median(Sales), by = Store]
pred = aggregate(Sales~Store, train, median)
pred%>%head
true = test[order(Store, Date), .(Store, Date, Sales)]
pred = merge(pred, true, by = 'Store', all.y = T)
pred%>%head
pred = pred$Sales.x
true = true$Sales
sqrt(cumsum( ((true - pred)/true)^2 )/ length(pred) )
cumsum( ((true - pred)/true)^2 )
((true - pred)/true)^2 %>% head
((true - pred)/true)^2 %>% cumsum
((true - pred)/true)^2 %>% length
((true - pred)/true)^2 %>% head
((true[1:6] - pred[1:6])/true[1:6])^2
((true[1:6] - pred[1:6])/true[1:6])^2 %>% cumsum
sum((true - pred)/true)^2 )
sum(((true - pred)/true)^2 )
pred = merge(pred, true, by = 'Store', all.y = T)[Sales.y !=0, ]
pred = aggregate(Sales~Store, train, median)
pred = merge(pred, true, by = 'Store', all.y = T)[Sales.y !=0, ]
true = test[order(Store, Date), .(Store, Date, Sales)]
pred = merge(pred, true, by = 'Store', all.y = T)[Sales.y !=0, ]
pred = merge(pred, true, by = 'Store', all.y = T)
pred%>%head
pred = pred[Sales.y!=0,]
pred = pred[pred$Sales.y!=0,]
pred = pred$Sales.x
true = true$Sales
length(pred)
sum(((true - pred)/true)^2 )
pred = pred$Sales.x
true = pred$Sales.y
sum(((true - pred)/true)^2 )
true = test[order(Store, Date), .(Store, Date, Sales)]
pred = aggregate(Sales~Store, train, median)
pred
pred$head
names(pred)
pred = pred$Sales.x
true = pred$Sales.y
sum(((true - pred)/true)^2 )
true==0 %>%sum
true!=0 %>%sum
true!=0 %>% length
true%>%head
true = pred$Sales.y
true = pred$Sales.y
true%>%head
pred = merge(pred, true, by = 'Store', all.y = T)
true = test[order(Store, Date), .(Store, Date, Sales)]
pred = aggregate(Sales~Store, train, median)
pred = merge(pred, true, by = 'Store', all.y = T)
pred = pred[pred$Sales.y!=0,]
pred = pred$Sales.x
true = pred$Sales.y
pred%>%summary
true = test[order(Store, Date), .(Store, Date, Sales)]
pred = aggregate(Sales~Store, train, median)
pred = merge(pred, true, by = 'Store', all.y = T)
pred = pred$Sales.x
true = pred$Sales.y
true = test[order(Store, Date), .(Store, Date, Sales)]
pred = aggregate(Sales~Store, train, median)
pred = merge(pred, true, by = 'Store', all.y = T)
pred = pred[pred$Sales.y!=0,]
true = pred$Sales.y
pred = pred$Sales.x
sum(((true - pred)/true)^2 )
sqrt(sum(((true - pred)/true)^2 )/ length(true))
err_cal = function(test, pred){
true = test[test$Sales !=0, c('Store', 'Date', 'Sales')][order(test$Store, test$Date),]
pred = merge(pred, true, by = 'Store', all.y = T)
true = pred$Sales.y
pred = pred$Sales.x
sqrt(sum(((true - pred)/true)^2 )/ length(true))
}
test = df[test_idx,]
pred = aggregate(Sales~Store, train, median)
err_cal(test, pred)
err_cal = function(test, pred){
true = test[test$Sales !=0, c('Store', 'Date', 'Sales')][order(Store, Date)]
pred = merge(pred, true, by = 'Store', all.y = T)
true = pred$Sales.y
pred = pred$Sales.x
sqrt(sum(((true - pred)/true)^2 )/ length(true))
}
err_cal(test, pred)
err_cal = function(test, pred){
true = test[Sales !=0, .(Store, Date, Sales)][order(Store, Date)]
pred = merge(pred, true, by = 'Store', all.y = T)
true = pred$Sales.y
pred = pred$Sales.x
sqrt(sum(((true - pred)/true)^2 )/ length(true))
}
err_cal(test, pred)
final_test$Date %<>% as.Date
summary(final_test)
summary(df)
df$Date %<>% as.Date
summary(df)
seq.Date()
?seq.Date
idx = train$Date %in% c(seq(as.Date('2013-08-01'), as.Date('2013-09-17'), by = 'day'),
seq(as.Date('2014-08-01'), as.Date('2014-09-17'), by = 'day'))
pred = aggregate(Sales~Store, train[idx, ], median)
err_cal(test, pred)
idx
summary(final_test)
true = test[order(Store, Date), .(Store, Date, Promo, Promo2, Open, Sales)]
ggplot(test, aes(Open, Sales)) + geom_bar()
library(ggplot2)
ggplot(test, aes(Open, Sales)) + geom_boxplot()
test$Open %<>% as.character %<>% as.factor
ggplot(test, aes(Open, Sales)) + geom_boxplot()
ggplot(test, aes(Open, Sales)) + geom_boxplot() + ylim(0,1000)
true = test[order(Store, Date), .(Store, Date, Promo, Promo, Sales)]
true = test[order(Store, Date), .(Store, Date, Promo, Promo2, Sales)]
pred = aggregate(Sales~Store+Promo+Promo2, train[Open!=0, ], median)
err_cal = function(true, pred){
pred = merge(true, pred, by = 'Store', all.x = T)
true = pred$Sales.x
pred = pred$Sales.y
sqrt(sum(((true - pred)/true)^2 )/ length(true))
}
err_cal(true, pred)
err_cal = function(true, pred){
pred = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = pred$Sales.x
pred = pred$Sales.y
sqrt(sum(((true - pred)/true)^2 )/ length(true))
}
err_cal(true, pred)
true = test[order(Store, Date), .(Store, Date, Promo, Promo2, Sales)]
pred = aggregate(Sales~Store+Promo+Promo2, train[Open!=0, ], median)
pred = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
View(pred)
true = pred$Sales.x
pred = pred$Sales.y
sqrt(sum(((true - pred)/true)^2 )/ length(true))
true = test[Sales!=0, .(Store, Date, Promo, Promo2, Sales)][order(Store, Date)]
pred = aggregate(Sales~Store+Promo+Promo2, train[Open!=0, ], median)
err_cal(true, pred)
err_cal = function(true, pred){
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[prd$Open ==0, 'Sales'] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true))
}
err_cal = function(true, pred){
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[prd$Open ==0, 'Sales'] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true))
}
err_cal(true, pred)
err_cal = function(true, pred){
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[Open ==0, Sales] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true))
}
err_cal(true, pred)
true = test[Sales!=0, .(Store, Date, Promo, Promo2, Sales)][order(Store, Date)]
View(true)
pred = aggregate(Sales~Store+Promo+Promo2, train[Open!=0, ], median)
View(pred)
pred = aggregate(Sales~Store+Promo+Promo2, train, median)
View(pred)
View(test)
View(final_test)
View(pred)
pred$Store %>% sort %>%head
View(true)
View(pred)
pred = pred[order(Store)]
pred = pred[order(pred$Store),]
View(pred)
View(Train)
View(train)
train_open=train[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2, train_open, median)
View(pred)
View(pred)
pred = pred[order(pred$Store),]
View(pred)
View(train)
View(train_open)
by = names(true)[!names(true)%in%c('Date', 'Sales')]
rm(by)
names(true)[!names(true)%in%c('Date', 'Sales')]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[Open ==0] = 0
pred[prd$Open ==0] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true))
summary(final_test)
true = test[Sales!=0, .(Store, Date, Promo, Promo2, Sales)][order(Store, Date)]
train_open=train[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2, train_open, mean)
pred = pred[order(pred$Store),]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[prd$Open ==0] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true))
View(final_test)
prd[prd$Store == 1, 'Sales.x']
prd[Store == 1, Sales.x] %>% plot
prd[Store == 1, {plot(Sales.x);lines(Sales.y)}]
View(prd)
View(prd)
summary(final_test)
test$Open %<>% as.character %<>% as.factor
ggplot(test, aes(Open, Sales)) + geom_boxplot()
true = test[Sales!=0, .(Store, Date, Promo, Promo2, Sales)][order(Store, Date)]
train_open=train[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2, train_open, median)
pred = pred[order(pred$Store),]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[prd$Open ==0] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true))
prd[Store == 1, {plot(Sales.x);lines(Sales.y)}]
View(prd)
View(final_test)
View(final_test)
test$DayOfWeek %<>% as.character %<>% as.factor
true = test[Sales!=0, .(Store, Date, Promo, Promo2, DayOfWeek, Sales)][order(Store, Date)]
train_open=train[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2+DayofWeek, train_open, mean)
pred = pred[order(pred$Store),]
true = test[Sales!=0, .(Store, Date, Promo, Promo2, DayOfWeek, Sales)][order(Store, Date)]
train_open=train[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek, train_open, mean)
pred = pred[order(pred$Store),]
View(pred)
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[prd$Open ==0] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true)) #0.2087514
true = test[Sales!=0, .(Store, Date, Promo, Promo2, DayOfWeek, Sales)][order(Store, Date)]
train_open=train[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek, train_open, median)
pred = pred[order(pred$Store),]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[prd$Open ==0] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true)) #0.1428383
names(test)
test$StateHoliday %<>% as.character %<>% as.factor
test$SchoolHoliday %<>% as.character %<>% as.factor
true = test[Sales!=0, .(Store, Date, Promo, Promo2, DayOfWeek, StateHoliday, SchoolHoliday, Sales)][order(Store, Date)]
train_open=train[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek+StateHoliday+SchoolHoliday, train_open, median)
pred = pred[order(pred$Store),]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[prd$Open ==0] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true)) #0.1412265
true = test[Sales!=0, .(Store, Date, Promo, Promo2, DayOfWeek, SchoolHoliday, Sales)][order(Store, Date)]
train_open=train[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek+SchoolHoliday, train_open, median)
pred = pred[order(pred$Store),]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
pred = prd$Sales.y
pred[prd$Open ==0] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true)) #0.1412265
View(prd)
View(final_test)
names(final_test)
train_open=df[Open!=0,]
true = final_test[Sales!=0, .(Store, Date, Promo, Promo2, DayOfWeek, Sales)][order(Store, Date)]
final_test$DayOfWeek %<>% as.character %<>% as.factor
final_test$Open %<>% as.character %<>% as.factor
final_test$Store %<>% as.character %<>% as.factor
final_test$Promo %<>% as.character %<>% as.factor
final_test$Promo2 %<>% as.character %<>% as.factor
true = final_test[Sales!=0, .(Store, Date, Promo, Promo2, DayOfWeek, Sales)][order(Store, Date)]
final_test %<>% as.data.table
true = final_test[Sales!=0, .(Store, Date, Promo, Promo2, DayOfWeek, Sales)][order(Store, Date)]
train_open=df[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek, train_open, median)
pred = pred[order(pred$Store),]
prd = merge(final_test, pred, by = names(final_test)[!names(final_test)%in%c('Date', 'Sales')], all.x = T)
names(final_test)[!names(final_test)%in%c('Date', 'Sales')]
true = final_test[, .(Store, Date, Promo, Promo2, DayOfWeek)][order(Store, Date)]
prd = merge(final_test, pred, by = names(final_test)[!names(final_test)%in%c('Date', 'Sales')], all.x = T)
prd = merge(final_test, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
pred = prd$Sales.y
pred[prd$Open ==0] = 0
pred = prd$Sales.y
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek, train_open, median)
pred = pred[order(pred$Store),]
true = final_test[, .(Store, Date, Promo, Promo2, DayOfWeek)][order(Store, Date)]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
true = prd$Sales.x
View(prd)
View(prd)
train_open=df[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek, train_open, median)
pred = pred[order(pred$Store),]
View(pred)
true = final_test[, .(Store, Date, Promo, Promo2, DayOfWeek)][order(Store, Date)]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
View(prd)
names(true)[!names(true)%in%c('Date', 'Sales')]
View(true)
View(prd)
View(pred)
View(pred)
View(true)
View(df)
train_open=df[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek, train_open, median)
pred = pred[order(pred$Store),]
true = final_test[, .(Store, Date, Promo, Promo2, DayOfWeek)][order(Store, Date)]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
View(prd)
View(pred)
View(true)
names(true)[!names(true)%in%c('Date', 'Sales')]
df$DayOfWeek %<>% as.character %<>% as.factor
df$Open %<>% as.character %<>% as.factor
df$Store %<>% as.character %<>% as.factor
df$Promo %<>% as.character %<>% as.factor
df$Promo2 %<>% as.character %<>% as.factor
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
train_open=df[Open!=0,]
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek, train_open, median)
pred = pred[order(pred$Store),]
true = final_test[, .(Store, Date, Promo, Promo2, DayOfWeek)][order(Store, Date)]
prd = merge(true, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
View(final_test)
View(prd)
df[Store==1003,]
df[Store=='1003',]
df[Store=='1003'&& Promo=='0'&& dayOfWeek=='7',]
df[Promo=='0'&& dayOfWeek=='7',]
df[Promo=='1'&& dayOfWeek=='7',]
df[Promo=='1'&& DayOfWeek=='7',]
df[Promo=='0'&& DayOfWeek=='7',]
df[(Promo=='0'&& DayOfWeek=='7'),]
df[Promo=='0' && DayOfWeek=='7',]
df[Promo=='0' & DayOfWeek=='7',]
df[Store='1003' & Promo=='0' & DayOfWeek=='7',]
df[Store=='1003' & Promo=='0' & DayOfWeek=='7',]
df[Store=='1003' & Promo=='0' & Promo2=='0' & DayOfWeek=='7',]
df[Store=='1003' & Promo=='0' & Promo2=='1' & DayOfWeek=='7',]
View(final_test)
final_test[Store=='1003' & Promo=='0' & Promo2=='1' & DayOfWeek=='7',]
pred[prd$Open ==0] = 0
pred[prd$Open ==0] = 0
View(prd)
View(pred)
pred[Store=='1003' & Promo=='0' & Promo2=='1' & DayOfWeek=='7',]
View(pred)
View(pred)
pred[Sales==0,]
pred[pred$Sales==0,]
View(pred)
View(prd)
View(prd)
View(true)
prd = merge(final_test, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
pred = prd$Sales.y
pred[prd$Open ==0] = 0
pred = prd$Sales
pred[prd$Open ==0]
sum(pred$Open ==0)
sum(pred ==0)
prd = merge(final_test, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
pred = aggregate(Sales~Store+Promo+Promo2+DayOfWeek, train_open, median)
pred = pred[order(pred$Store),]
prd = merge(final_test, pred, by = names(true)[!names(true)%in%c('Date', 'Sales')], all.x = T)
View(prd)
pred = prd$Sales
pred[prd$Open == '0'] = 0
sum(is.na(pred))
prd[prd$Open == '0', 'Sales'] = 0
prd[prd$Open == '0', 'Sales'] = 0
sqrt(sum(((true - pred)/true)^2 )/ length(true)) #0.1412265
write.csv(prd[,c('ID', 'Sales')], 'submission.csv')
write.csv(prd[,.(ID, Sales)], 'submission.csv')
View(prd)
write.csv(prd[,.(Id, Sales)], 'submission.csv')
View(prd)
write.csv(prd[order(Id),.(Id, Sales)], 'submission.csv')
write.csv(prd[order(Id),.(Id, Sales)], 'submission.csv', row.names = F)
library(data.table)
df = fread('train.csv', stringsAsFactors = T)
View(df)
final_test = fread('test.csv', stringsAsFactors = T)
df$Date %>% head
df$Date %>% as.Date %>%head
View(df)
df$Date %<>% as.Date
(max(df$Date) - 47 + 1) : max(df$Date)
df = fread('train.csv', stringsAsFactors = T)
df$Date %<>% as.character %>% as.Date
(max(df$Date) - 47 + 1) : max(df$Date)
View(df)
max(df$Date)
seq((max(df$Date) - 47 + 1), max(df$Date), by = 'day')
train = df[!test_idx,]
test = df[test_idx,]
summary(df)
df = fread('train.csv', stringsAsFactors = T) %>% merge('store.csv', by = 'Store')
df = fread('train.csv', stringsAsFactors = T) %>% merge(fread('store.csv'), by = 'Store')
option(stringsAsFactors = T)
options(stringsAsFactors = T)
df = fread('train.csv') %>% merge(fread('store.csv'), by = 'Store')
final_test = fread('test.csv') %>% merge(fread('store.csv'), by = 'Store')
final_test[,.(DayOfWeek, Open, Store, Promo, Promo2)] %<>% sapply(.%>%as.character%>%as.factor)
final_test = fread('test.csv') %>% merge(fread('store.csv'), by = 'Store')
final_test[,.(DayOfWeek, Open, Store, Promo, Promo2)] %<>% sapply(.%>%as.character%>%as.factor)
final_test[,.(DayOfWeek, Open, Store, Promo, Promo2)] %<>% sapply(.%>%{as.character(.)%>%as.factor})
final_test$DayOfWeek %<>% as.character %>% as.factor
final_test$Open %<>% as.character %>% as.factor
final_test$Store %<>% as.character %>% as.factor
final_test$Promo %<>% as.character %>% as.factor
final_test$Promo2 %<>% as.character %>% as.factor
df$DayOfWeek %<>% as.character %>% as.factor
df$Open %<>% as.character %>% as.factor
df$Store %<>% as.character %>% as.factor
df$Promo %<>% as.character %>% as.factor
df$Promo2 %<>% as.character %>% as.factor
test[Sales!=0, .SD, ,.SDcols = cols][order(Store, Date)]
test = df[test_idx,]
View(test)
test[Sales!=0, .SD, ,.SDcols = cols][order(Store, Date)]
test[Sales!=0, .SD[,c('Store', 'Date', 'Sales')]][order(Store, Date)]
test[Sales!=0, list(c('Store', 'Date', 'Sales'))][order(Store, Date)]
cols = c('Store')
cols = c(cols, 'Sales', 'Date')
test[order(Store, Date)][Sales!=0, .SD, .SDcols= cols]
train_open=train[Open!=0,]
?"data.table"
train_open[, median(Sales), by = cols, with = F]
true = test[order(Store, Date)][Sales!=0, cols, with = F]
View(true)
cols = c(cols, 'Sales', 'Date')
train_open=train[Open!=0,]
cols = c('Store')
train_open[, median(Sales), by = cols, with = F]
train_open[, median(Sales), by = get(cols)]
train$Store %>%summary
summary(train)
final_test$DayOfWeek %<>% as.character %>% as.factor
final_test$Open %<>% as.character %>% as.factor
final_test$Store %<>% as.character %>% as.factor
final_test$Promo %<>% as.character %>% as.factor
final_test$Promo2 %<>% as.character %>% as.factor
test_idx = df$Date %in% seq((max(df$Date) - 47 + 1), max(df$Date), by = 'day')
df$Date %<>% as.character %>% as.Date
test_idx = df$Date %in% seq((max(df$Date) - 47 + 1), max(df$Date), by = 'day')
train = df[!test_idx,]
test = df[test_idx,]
cols = c('Store')
true = test[order(Store, Date)][Sales!=0, cols, with = F]
train_open=train[Open!=0,]
train_open[, median(Sales), by = get(cols)]
train%>%summary
train_open[, mean(Sales), by = get(cols)]
sapply(df, class)
df$Sales %<>% as.double
train_open[, median(Sales), by = get(cols)]
test_idx = df$Date %in% seq((max(df$Date) - 47 + 1), max(df$Date), by = 'day')
train = df[!test_idx,]
test = df[test_idx,]
train_open=train[Open!=0,]
train_open[, median(Sales), by = get(cols)]
